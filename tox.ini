[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    docs,
    {py38},
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    py38: {env:TOXPYTHON:python3.8}
    {bootstrap,clean,check,report,codecov}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    appdirs==1.4.4
    assertpy==1.0
    atomicwrites==1.4.0
    attrs==20.1.0
    certifi==2020.6.20
    chardet==3.0.4
    colorama==0.4.3
    configparser==5.0.0
    coverage==5.2.1
    crayons==0.4.0
    distlib==0.3.1
    filelock==3.0.12
    idna==2.10
    iniconfig==1.0.1
    more-itertools==8.5.0
    packaging==20.4
    pluggy==0.13.1
    py==1.9.0
    pyparsing==2.4.7
    pytest==6.0.1
    pytest-cov==2.10.1
    pytest-travis-fold==1.3.0
    PyYAML==5.3.1
    requests==2.24.0
    selenium==3.141.0
    six==1.15.0
    toml==0.10.1
    tox==3.19.0
    urllib3==1.25.10
    virtualenv==20.0.31
    webdriver-manager==3.2.2
    pre-commit==2.4.0

commands =
    {posargs:pytest --cov --cov-report=term-missing -vv tests}


[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage


[testenv:linting]
skip_install = True
basepython = python3
deps = pre-commit>=2.4.0
commands = pre-commit run --all-files {posargs:}
